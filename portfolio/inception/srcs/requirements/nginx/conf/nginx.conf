# nginx 프로세스가 실행되는 권한. user 지시어는 워커 프로세스의 권한을 지정한다.
user nginx;

# nginx 워커 프로세스의 수를 설정(실질적인 웹 서버 역할을 한다). 'auto'로 설정하면 시스템의 CPU 코어 수만큼 자동으로 생성
worker_processes auto;

# 'events' 블록은 nginx의 비동기 이벤트 처리에 관한 옵션을 설정한다.
events {
	 # 워커 프로세스 당 동시 연결 수를 설정
    worker_connections  1024;
}

# 'http' 블록은 웹 서버의 기능을 설정한다.
http {
  include mime.types;
  # 'server' 블록은 가상 호스트를 설정한다.
  server {
	# SSL/TLS를 사용하여 443 포트에서 리스닝
    listen 443 ssl;
	# 서버 이름을 설정. 클라이언트가 접속할 도메인 이름.
    server_name nakoo.42.fr;

    # SSL 인증서와 키의 위치를 설정
    ssl_certificate /etc/nginx/cert.crt;
    ssl_certificate_key /etc/nginx/cert.key;
 	# 사용할 SSL/TLS 버전을 설정
    ssl_protocols TLSv1.2 TLSv1.3;

 	# 웹서버의 root 디렉토리를 설정
    root /var/www/html;
  	# 디렉토리의 기본 파일을 설정
    index index.php index.html;

    # 'location' 블록, 특정 URL 경로애 대한 설정을 정의한다.
    location / {
		# 파일이나 디렉토리가 없는 경우 index.php에 요청을 전달
        try_files $uri $uri/ /index.php?$args;
    }

    # php 파일 요청을 처리하는 방식을 정의
    location ~ \.php$ {
		# 요청된 스크립트 파일의 경로를 분리
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # 요청된 php 파일이 존재하지 않으면 404 에러를 반환
        if (!-f $document_root$fastcgi_script_name){
			return 404;
        }

		# FastCGI 서버로 요청을 전달. 여기서는 wordpress 서비스의 9000 포트로 연결
        fastcgi_pass wordpress:9000;
		# 기본 FastCGI 스크립트 이름을 설정
        fastcgi_index index.php;
		# FastCGI 파라미터를 포함한 파일을 포함
        include fastcgi.conf;

        # FastCGI 파라미터를 설정. 실제 스크립트 파일의 경로와 정보를 넘긴다
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
  }
}